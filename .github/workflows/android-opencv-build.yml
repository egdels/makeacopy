name: Android Build (mit OpenCV NDK)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Android SDK NDK 29.0.13599879
        run: |
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --sdk_root=${ANDROID_HOME} "ndk;29.0.13599879"
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}

      - name: Check NDK path
        run: ls -l $ANDROID_HOME/ndk

      # Build OpenCV native libraries from source
      - name: Fetch OpenCV sources
        run: |
          chmod +x scripts/fetch_opencv.sh
          ./scripts/fetch_opencv.sh

      - name: Build OpenCV native libraries
        run: |
          chmod +x scripts/build_opencv_android.sh
          ./scripts/build_opencv_android.sh

      - name: Prepare OpenCV for app
        run: |
          chmod +x scripts/prepare_opencv.sh
          ./scripts/prepare_opencv.sh

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ENCODED_KEYSTORE" ]; then
            echo "$ENCODED_KEYSTORE" | base64 --decode > app/keystore.jks
            echo "Keystore decoded successfully"
          else
            echo "No keystore provided, will build unsigned APK"
            exit 1
          fi

      # Build standard flavor
      - name: Build standard debug APK
        run: ./gradlew assembleStandardDebug

      - name: Build standard release APK
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew assembleStandardRelease

      - name: Build standard AAB
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew bundleStandardRelease

      # Build FOSS flavor
      - name: Build FOSS debug APK
        run: ./gradlew assembleFossDebug

      - name: Build FOSS release APK
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew assembleFossRelease

      - name: Build FOSS AAB
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew bundleFossRelease

      # Verify signing
      - name: Verify APK Signing
        run: |
          echo "Verifying standard release APK signing..."
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify --verbose app/build/outputs/apk/standard/release/app-standard-release.apk

          echo "Verifying FOSS release APK signing..."
          $ANDROID_HOME/build-tools/34.0.0/apksigner verify --verbose app/build/outputs/apk/foss/release/app-foss-release.apk

      # Upload artifacts
      - name: Upload debug APKs
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: |
            app/build/outputs/apk/standard/debug/app-standard-debug.apk
            app/build/outputs/apk/foss/debug/app-foss-debug.apk

      - name: Upload release APKs
        uses: actions/upload-artifact@v4
        with:
          name: release-apks
          path: |
            app/build/outputs/apk/standard/release/app-standard-release.apk
            app/build/outputs/apk/foss/release/app-foss-release.apk

      - name: Upload AABs
        uses: actions/upload-artifact@v4
        with:
          name: release-bundles
          path: |
            app/build/outputs/bundle/standardRelease/app-standard-release.aab
            app/build/outputs/bundle/fossRelease/app-foss-release.aab
